name: Install Poetry on Push

on:
  pull_request:
    branches:
      - main

jobs:
  install-poetry:
    permissions: write-all # this is the FIX
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3.1.0

      - name: Install Poetry
        run: |
          pip3 install poetry
          poetry --version
          poetry install
          poetry build
          ls -l dist

      - name: Extract version from pyproject.toml
        id: extract_version
        run: |
          VERSION=$(grep "version =" pyproject.toml | awk '{print $3}' | tr -d '"')
          echo "Version: $VERSION"
          echo "::set-output name=version::$VERSION"
          
      - name: Read release.md file
        run: |
          RELEASE_BODY=$(cat release.md)
          echo "::set-output name=release_body::$RELEASE_BODY"

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: dist/console-${{ steps.extract_version.outputs.version }}.tar.gz
          asset_name: console-${{ steps.extract_version.outputs.version }}.tar.gz
          tag: v${{ steps.extract_version.outputs.version }}
          overwrite: true
          body: "${{ steps.read_release.outputs.release_body }}"






      # - name: Bump version and push tag
      #   uses: anothrNick/github-tag-action@master
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     REPO_OWNER: keithweaver







      # - name: Create Release
      #   env:
      #     GH_TOKEN: ${{ github.token }}
      #     GH_REPO: ${{ github.repository }}
      #   run: |
      #     tag="${{ steps.tag.outputs.tag }}"
      #     gh release create --draft "$tag" --title "$tag" --notes "dfgsdfg"
      # - name: Create Draft Release
      #   id: create_release
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     tag_name: <tofill>
      #     release_name: <tofill>
      #     draft: true
      #     prerelease: false

      # - uses: actions/upload-release-asset@v1.0.1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: dist/console-1.0.0.tar.gz
      #     asset_name: console-1.0.0.tar.gz
      #     asset_content_type: application/tar.gz

      # - uses: eregon/publish-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     release_id: ${{ steps.create_release.outputs.id }}
        # - name: Release
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   run: >-
      #     gh release create ${{ github.ref_name }}
      #     "release.zip#Whatever you want to call this artifact"
      #     --generate-notes
      #     --title "Version ${{ github.ref_name }} (or some other name)"
      # # - name: Upload package to release
      # #   uses: softprops/action-gh-release@v1
      # #   with:
      # #     files: dist/console-${{ steps.extract_version.outputs.version }}.tar.gz
      # #   env:
      # #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
